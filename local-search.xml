<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>排序算法总结</title>
    <link href="/2025/01/25/%E6%8E%92%E5%BA%8F%E6%80%BB%E7%BB%93/"/>
    <url>/2025/01/25/%E6%8E%92%E5%BA%8F%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<p>八大排序总结,方便以后回来时不时回来看看复习</p><h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">bubble_sort</span><span class="hljs-params">(<span class="hljs-type">int</span> arr[],<span class="hljs-type">int</span> len)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> flag=<span class="hljs-number">1</span>;<span class="hljs-comment">//算法优化,如果剩下的数已经有序了就不用在遍历 </span><br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;len<span class="hljs-number">-1</span>&amp;&amp;flag==<span class="hljs-number">1</span>;i++)<span class="hljs-comment">//外层循环遍历每一个数 内层循环选出每轮最小/大的数 </span><br>&#123;<br>flag=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;len<span class="hljs-number">-1</span>-i;j++)<span class="hljs-comment">//排除最后已经排好的数字 </span><br>&#123;<br><span class="hljs-keyword">if</span>(arr[j]&gt;arr[j<span class="hljs-number">+1</span>])<br>&#123;<br>flag=<span class="hljs-number">1</span>;<br><span class="hljs-type">int</span> temp=arr[j];<br>arr[j]=arr[j<span class="hljs-number">+1</span>];<br>arr[j<span class="hljs-number">+1</span>]=temp;<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-comment">//flag的意义是设定一个检查看是否剩下未排序的数已经有序,如果已经有</span><br><span class="hljs-comment">//序就不用在进行后续遍历了,是算法优化. </span><br></code></pre></td></tr></table></figure><h3 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h3><h3 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">//算法思想:分治(划分)</span><br><span class="hljs-comment">//快排先划分排序在递归(整体到局部)  归并排序先递归在排序(局部到整体) </span><br><span class="hljs-comment">//快排取数组数字 归并取数组的下标即位置 </span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">quick_sort</span><span class="hljs-params">(<span class="hljs-type">int</span> a[],<span class="hljs-type">int</span> l,<span class="hljs-type">int</span> r)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span>(l&gt;=r)<span class="hljs-comment">//头尾重合则递归结束返回 </span><br>&#123;<br><span class="hljs-keyword">return</span>;<br>&#125;<span class="hljs-comment">//还要+1的原因是防止取到索引0处 </span><br><span class="hljs-type">int</span> x=a[(l+r<span class="hljs-number">+1</span>)/<span class="hljs-number">2</span>];<span class="hljs-comment">//在数组中随便取一个数即可不一定是中间</span><br><span class="hljs-comment">//一定要考虑好边界问题:哪些值可以取哪些值不能取 这种情况是不能取x为索引为0处即和l重合的索引 要不然</span><br><span class="hljs-comment">//会陷入死循环 </span><br><span class="hljs-type">int</span> i=l<span class="hljs-number">-1</span>,j=r<span class="hljs-number">+1</span>;<span class="hljs-comment">//双指针指向头尾 </span><br><span class="hljs-keyword">while</span>(i&lt;j)<span class="hljs-comment">//注意条件是用指针判断大小 不是l&lt;r判断 </span><br>&#123;<br><span class="hljs-comment">//两个指针从头尾开始遍历 不是一起动而是先动其中一个然后遇到不满足情况的时候卡住然后等待</span><br><span class="hljs-comment">//另一个移动直到另一个卡住然后交换两个指针所指的数字 </span><br><span class="hljs-comment">//左边:当前指针满足小于数x继续移动直到不满足卡住等待另一端</span><br><span class="hljs-comment">//右边: 当前指针满足大于数x 不满足卡住和左指针交换即可 </span><br><span class="hljs-keyword">do</span><br>&#123;<br>i++; <span class="hljs-comment">//指针i正向遍历 </span><br> &#125; <span class="hljs-keyword">while</span>(a[i]&lt;x);<br> <span class="hljs-keyword">do</span><br>&#123;<br>j--; <span class="hljs-comment">//指针j反方向遍历 </span><br> &#125; <span class="hljs-keyword">while</span>(a[j]&gt;x);<br> <span class="hljs-comment">//注意条件是用指针判断大小 不是l&lt;r判断 </span><br> <span class="hljs-keyword">if</span>(i&lt;j) <span class="hljs-built_in">swap</span>(a[i],a[j]);<span class="hljs-comment">//等于的情况即是原地交换不变 然后两指针继续重复上述步骤 </span><br> &#125; <br> <span class="hljs-built_in">quick_sort</span>(a,l,i<span class="hljs-number">-1</span>);<span class="hljs-comment">//对小于x和大于x的两侧进行递归 </span><br> <span class="hljs-built_in">quick_sort</span>(a,i,r);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">//归并排序 算法思想:分治(递归) </span><br><span class="hljs-comment">//快排先划分排序在递归(整体到局部)  归并排序先递归在排序(局部到整体) </span><br><span class="hljs-comment">//快排取数组数字 归并取数组的下标即位置 </span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">merge_sort</span><span class="hljs-params">(<span class="hljs-type">int</span> a[],<span class="hljs-type">int</span> l,<span class="hljs-type">int</span> r)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span>(l&gt;=r) <span class="hljs-keyword">return</span>;<br><span class="hljs-type">int</span> mid=(l+r)/<span class="hljs-number">2</span>;<span class="hljs-comment">//取中间 </span><br><span class="hljs-comment">//先递归在排序 </span><br><span class="hljs-built_in">merge_sort</span>(a,l,mid);<span class="hljs-comment">//不能取(l,mid-1) </span><br><span class="hljs-built_in">merge_sort</span>(a,mid<span class="hljs-number">+1</span>,r); <span class="hljs-comment">//不能取(mid,r) </span><br><br><span class="hljs-type">int</span> i=l,j=mid<span class="hljs-number">+1</span>;<span class="hljs-comment">//两个指针 </span><br><span class="hljs-type">int</span> p=<span class="hljs-number">0</span>;<span class="hljs-comment">//临时数组的下标指向 </span><br><span class="hljs-keyword">while</span>(i&lt;=mid&amp;&amp;j&lt;=r)&#123; <span class="hljs-comment">//注意考虑好边界问题 什么时候</span><br><span class="hljs-keyword">if</span>(a[i]&lt;=a[j]) tmp[p++]=a[i++];<span class="hljs-comment">//把小的存入新的临时数组 </span><br><span class="hljs-keyword">else</span> tmp[p++]=a[j++];<br>&#125;<br><span class="hljs-keyword">while</span>(i&lt;=mid)tmp[p++]=a[i++];<span class="hljs-comment">//把剩下的没有挪入的挪入tmp </span><br><span class="hljs-keyword">while</span>(j&lt;=r)tmp[p++]=a[j++];<span class="hljs-comment">//不是小于mid是小于r</span><br><span class="hljs-keyword">for</span>(i=l,j=<span class="hljs-number">0</span>;i&lt;=r;i++,j++)<span class="hljs-comment">//注意边界</span><br>&#123;<br>a[i]=tmp[j];<span class="hljs-comment">//把临时数组(已经排好序)赋给原数组 </span><br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="堆排序"><a href="#堆排序" class="headerlink" title="堆排序"></a>堆排序</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++"><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>排序</tag>
      
      <tag>c++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>健身随谈(持续更新)</title>
    <link href="/2024/12/11/%E5%81%A5%E8%BA%AB%E9%9A%8F%E8%B0%88/"/>
    <url>/2024/12/11/%E5%81%A5%E8%BA%AB%E9%9A%8F%E8%B0%88/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言:"></a>前言:</h1><p>我是从2024年3月3日开始健身的,写这个文章的目的是把自己从健身到现在走过坑和所有的健身计划和个人感受分享给大家,以及随着我的年限增加我也会及时修改我这个文章里不太正确的观点,我会随着我所学习到的东西及时更新和修改文章.</p><p>关于我个人的详细训练计划和动作我会放在第五章去分享</p><p>此文章仅是分享,不是指导和建议,根据自身仅供参考(也是我的一个复盘和记录),整篇文章如果提到任何产品或商品或博主无广,只是个人觉得好做推荐.</p><h1 id="第一部分训练思路"><a href="#第一部分训练思路" class="headerlink" title="第一部分训练思路:"></a>第一部分训练思路:</h1><h5 id="这一部分的内容我认为是最重要的东西-俗话说的好-健身先健脑-想要有一个好的健身反馈就要有一个好的-适合自己的训练思路"><a href="#这一部分的内容我认为是最重要的东西-俗话说的好-健身先健脑-想要有一个好的健身反馈就要有一个好的-适合自己的训练思路" class="headerlink" title="这一部分的内容我认为是最重要的东西,俗话说的好,健身先健脑,想要有一个好的健身反馈就要有一个好的,适合自己的训练思路"></a>这一部分的内容我认为是最重要的东西,俗话说的好,健身先健脑,想要有一个好的健身反馈就要有一个好的,适合自己的训练思路</h5><p>首先我先说的是也是最重要的就是我的训练思路,我认为健身是服务于生活的,所以生活是最主要的健身是次要的,所以我不会急于求成再加上我认为健身最好的天赋不是肌肉和力量增长的有多么快而是可以一直保持不受伤稳定的进步和不影响生活,所以在这里想要告诉大家的是不要急于求成,越着急越容易受伤越没有想要的回报.</p><p>再者,健身既然是服务于生活的,两者的主次不能颠倒,生活和身体健康是第一位.尽管有很多人想练出很大的肌肉但是真的健康吗</p><p>我的训练方式会尽可能的选择复合式动作(如果你是0基础健身小白(我指的是完完全全没有运动习惯的人群,哪怕你有一点的运动习惯都可以直接开始作复合动作)先不用遵循这个原则先去看第二部分),第一点复合动作它可以调集全身大部分肌肉共同发力和孤立训练往往相反,会有很多的溢出效应比如说三大项(杠铃深蹲,杠铃卧推,杠铃硬拉).第二点复合运动也代表着高风险高收益,这一点就表明我们不能盲目上重量和冲重量一定要在安全和自己能够承受的范围内去练复合动作,不要被身边的训练小伙伴’蛊惑’冲重量,无论什么训练计划和思路安全永远是第一位而且复合动作受的伤往往都是很严重,不可逆,伴随一生的,所以一定要很慎重.</p><h1 id="第二部分关于开始健身"><a href="#第二部分关于开始健身" class="headerlink" title="第二部分关于开始健身:"></a>第二部分关于开始健身:</h1><p>首先我是不推荐小白(无运动习惯)直接去健身房的,刚刚开始在家做做俯卧撑和卷腹(类似这种的变式也可以)即可,先积累一点力量和肌肉还有关节强度再去健身房健身,要不然刚刚开始没有运动基础很容易受伤,在家运动大概一个月左右的时间就可以去健身房了.步入健身房之后就像我第一部分所说的那样不要一开始就练太难的复合型动作(比如说:实力推,硬拉,杠铃划船)因为很容易受伤的,杠铃卧推和杠铃深蹲这类黄金动作还是可以慢慢练的,但是刚刚开始我推荐先做孤立器械先练上一阵子比如说1个月左右时间然后再把重心调整到三大项或者复合型动作,即把中心放在孤立器械上把孤立器械的相关训练当作主项,而复合动作在这一阶段去放到次要,在这一阶段重在打好良好的动作习惯和正确发力习惯之后在上重量,如果一开始就没有好的习惯和动作后面上了重量很容易会受伤而且到那时候想改也相对不容易了.</p><p>大家应该都听说过新手福利期,每个人的长短都不同,我的新手福利期大概有6个月左右.之所以提这个的原因是大家千万不能有一种心里’趁着新手福利期多练练累一点也无所谓或者盲目冲重量’,这个念头显然是错误的,只要你新手福利期保持不受伤你就可以进步飞快,因为我在福利期手腕受过两次小伤影响了有一段时间的训练但是好在伤病不严重很快的恢复过来了然后想明白了这个道理只后就会很小心的慢慢增加重量,之后再也没受过伤.所以大家如果可以不受伤肯定进步要比我快很多不用纠结于新手福利期是否要把自己逼那么累.心急吃不了热豆腐.</p><h1 id="第三部分关于补给"><a href="#第三部分关于补给" class="headerlink" title="第三部分关于补给:"></a>第三部分关于补给:</h1><h1 id="第四部分关于训练分化"><a href="#第四部分关于训练分化" class="headerlink" title="第四部分关于训练分化:"></a>第四部分关于训练分化:</h1><h1 id="第五部分关于训练伤病"><a href="#第五部分关于训练伤病" class="headerlink" title="第五部分关于训练伤病:"></a>第五部分关于训练伤病:</h1><p>首先本部分不做任何的医学参考,只是个人的经验和建议</p><p>我个人是没有受过什么大伤的,只是在健身初期的时候为了虚荣心推哑铃卧推手腕受过两次伤(应该不是tfcc但是手腕左右转还是会疼 前后不会疼),再者就是腰有时候还是会不舒服但是基本上不是健身影响的,是我平时坐姿和久坐导致的.</p><p>我个人认为受伤可以分为两个因素我(生活 训练)一个个来说:</p><p>生活方面:生活其实是导致我们受伤的主要因素,因为我平时大部分时间肯定不是在健身,所以生活中大部分的不良习惯会慢慢积累让我们体态发生变化从而某些部位代偿越来越严重导致埋下了一棵定时炸弹.</p><p>训练方面:我们大多数受伤肯定都是在训练中发生的,我们也肯定会认为是训练导致的,其实是平时生活中不良的习惯积少成多导致的,在某一次训练中也许因为我们的虚荣心或者没有敬畏那个重量从而受伤,总结一下伤病就像一个炸弹随时可能会爆发,生活中的不良习惯就像是引线(不良习惯越多引线越短),训练中的不敬畏重量就像是打火机一下点燃了那个引线从而炸弹爆炸导致我们受伤.</p><p>那么有没有什么方法不受伤?<br>我认为是没有,那么我们做那些辅助训练还有什么用呢?当然是有用的,这些辅助训练和只是延长了引线大大降低了我们受伤的概率,但是仅仅只是概率降低了,只要概率存在就会发生,如果我们在一次训练中没有敬畏重量那么小概率的事情也是会发生,所以我要做到辅助训练的同时也要敬畏重量,这就相当于做了双层保险了,想受伤也会很难了.</p><p>如果已经受伤了要怎么康复?</p><h1 id="第六部分三大项"><a href="#第六部分三大项" class="headerlink" title="第六部分三大项:"></a>第六部分三大项:</h1><p>之所以把三大项单独拿出来说是因为它真的太太太重要了,三大项练的好的人其他项目绝对不烂但是反之就不一定了,而且三大项的溢出效应也是很高的,但是相对其他动作来说会稍微危险一点,但是永远都是高风险高收益如果你有需求或者希望进步快可以试着在训练里加入三大项(以安全为第一的前提下,动作一定要规范)<br>三大项刚刚开始训练的时候不要着急加重 一开始先把动作基础打好 三大项的动作永远都不会标准的需要随时改正和自己打磨 我的动作也不标准</p><p>三大项的共同点:<br>三大项永远不是靠爆发提升的而是靠稳定和一步步来才能提升的,总而言之 大家一定要建立起做动作有步骤的意识 一步一步来 ,简单来说就是要有意识和思维意识按照步骤一步步来,想好下一步 做完这一步就不要去想上一步</p><h3 id="深蹲"><a href="#深蹲" class="headerlink" title="深蹲:"></a>深蹲:</h3><p>首先先讲一下深蹲的本质,深蹲的本质就是身体和上肢和下肢对抗作用再加上力从上半身传到到下半身,一步步来<br>步骤:<br>1.</p><p>注意事项(这些要点都是我训练时犯过的错):<br>1.一定要全程注意力集中不要思想抛锚,脑子里时时刻刻注意要点(很多受伤都是因为注意力没有集中导致的目标集群松懈然后受伤)</p><p>2.大腿全程保持张力,下降到底端的时候大腿不要松懈,蹲到幅度后不要停顿(如果你想提高深蹲成绩可以训练底端暂停深蹲)顺势起来(做连贯)(我经常下降起来的时候做不连贯底部都要微微停顿一下,也就是力的传导不连贯 断层了,我最近才纠正过来 因为我发现我在底端大腿会松懈一下然后才发力)</p><p>3.蹲到底端起来的时候不仅要做到第二条的连贯顺势,还要一点要注意在底端起来的时候不要先抬臀(伤腰),可以臀发力但是主要还是以腿发力为主一定要注意力集中让腿部集中发力(我很长一段时间一上大重量就尾巴骨那部分疼不知道原因,但是当我意识到我在底端没有以腿发力为主导再加上注意力没有放在腿上和先抬臀导致剪切力很大(主要还是注意力没有放在腿上思想抛锚了,所以说注意力集中真的很重要)导致腰和尾巴骨那部分疼,我改掉这个问题之后就好了很多)</p><h3 id="卧推"><a href="#卧推" class="headerlink" title="卧推:"></a>卧推:</h3><h3 id="硬拉"><a href="#硬拉" class="headerlink" title="硬拉:"></a>硬拉:</h3><p>首先先讲一下硬拉的本质,硬拉的本质是上肢(特别是背部)和下肢或杆子产生对抗,再加上把力从上肢传递到脚</p><h1 id="第七部分关于训练计划和训练动作详细思路分享"><a href="#第七部分关于训练计划和训练动作详细思路分享" class="headerlink" title="第七部分关于训练计划和训练动作详细思路分享:"></a>第七部分关于训练计划和训练动作详细思路分享:</h1><h3 id="胸部训练"><a href="#胸部训练" class="headerlink" title="胸部训练:"></a>胸部训练:</h3><h3 id="肩部训练"><a href="#肩部训练" class="headerlink" title="肩部训练:"></a>肩部训练:</h3><h3 id="腿部训练"><a href="#腿部训练" class="headerlink" title="腿部训练:"></a>腿部训练:</h3><h3 id="背部训练"><a href="#背部训练" class="headerlink" title="背部训练:"></a>背部训练:</h3><h3 id="腹部and核心训练"><a href="#腹部and核心训练" class="headerlink" title="腹部and核心训练:"></a>腹部and核心训练:</h3><h3 id="手臂训练"><a href="#手臂训练" class="headerlink" title="手臂训练:"></a>手臂训练:</h3><h3 id="有氧"><a href="#有氧" class="headerlink" title="有氧:"></a>有氧:</h3><h3 id="关于拉伸和关节灵活性"><a href="#关于拉伸和关节灵活性" class="headerlink" title="关于拉伸和关节灵活性:"></a>关于拉伸和关节灵活性:</h3><h1 id="第八部分关于饮食"><a href="#第八部分关于饮食" class="headerlink" title="第八部分关于饮食:"></a>第八部分关于饮食:</h1><h1 id="第九部分关于休息and轻训周"><a href="#第九部分关于休息and轻训周" class="headerlink" title="第九部分关于休息and轻训周:"></a>第九部分关于休息and轻训周:</h1><h1 id="第十部分关于瓶颈期"><a href="#第十部分关于瓶颈期" class="headerlink" title="第十部分关于瓶颈期:"></a>第十部分关于瓶颈期:</h1><h1 id="第十一部分其他"><a href="#第十一部分其他" class="headerlink" title="第十一部分其他:"></a>第十一部分其他:</h1><p>这一部分不太好分类所以我就打算把能想到的都在这里写到(当然会在这里分类的)</p><h3 id="推荐的博主"><a href="#推荐的博主" class="headerlink" title="推荐的博主:"></a>推荐的博主:</h3><p>这一部分给大家分享一下我比较喜欢的博主,现在互联网时代我认为完全没有必要请私教,可以从网络上学到很多东西,这些博主我认为教的东西都很干,排名不分先后.</p><h5 id="凯圣王"><a href="#凯圣王" class="headerlink" title="凯圣王:"></a>凯圣王:</h5><p>不必多说,新手健身路上的必备老师,教的东西和每期视频都很干货,无论是理论知识还是实际都很干,涉及各个方面:训练,拉伸,热身,饮食…..他还出过三分化跟练视频,真的就是手把手健身了.</p><h5 id="自强不息归来"><a href="#自强不息归来" class="headerlink" title="自强不息归来:"></a>自强不息归来:</h5><p>这个博主也是健身多年的大佬,他视频讲的东西更贴近生活和普通人,饮食和训练方法也更大众化一些,包括他介绍的补给视频也很通俗易懂,他的视频风格我也很喜欢,教学视频也很长.</p><h5 id="叶先生爱健身"><a href="#叶先生爱健身" class="headerlink" title="叶先生爱健身"></a>叶先生爱健身</h5><h5 id="怪兽拖鞋战神"><a href="#怪兽拖鞋战神" class="headerlink" title="怪兽拖鞋战神"></a>怪兽拖鞋战神</h5><h5 id="力量矩阵"><a href="#力量矩阵" class="headerlink" title="力量矩阵"></a>力量矩阵</h5>]]></content>
    
    
    
    <tags>
      
      <tag>健身</tag>
      
      <tag>分享</tag>
      
      <tag>杂谈</tag>
      
      <tag>日常</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>First blog,Hello!</title>
    <link href="/2024/12/01/hello-world/"/>
    <url>/2024/12/01/hello-world/</url>
    
    <content type="html"><![CDATA[<h3 id="大家好-第一次开始写博客来记录-决定记录一下自己的学习历程以及经验分享还有健身计划和经验分享-希望可以帮助大家-欢迎大家和我来一起讨论"><a href="#大家好-第一次开始写博客来记录-决定记录一下自己的学习历程以及经验分享还有健身计划和经验分享-希望可以帮助大家-欢迎大家和我来一起讨论" class="headerlink" title="大家好,第一次开始写博客来记录,决定记录一下自己的学习历程以及经验分享还有健身计划和经验分享,希望可以帮助大家,欢迎大家和我来一起讨论."></a>大家好,第一次开始写博客来记录,决定记录一下自己的学习历程以及经验分享还有健身计划和经验分享,希望可以帮助大家,欢迎大家和我来一起讨论.</h3><h1 id="———健身记录"><a href="#———健身记录" class="headerlink" title="———健身记录:"></a>———健身记录:</h1><p>欢迎大家随时来看我的<a href="https://v.douyin.com/iDQAgR6n/">抖音</a>和我一起讨论健身内容,有需要或者想问我的训练计划和思路方法的可以随时私信我,希望可以帮助到大家,免费,共勉!</p><h1 id="———学习记录"><a href="#———学习记录" class="headerlink" title="———学习记录:"></a>———学习记录:</h1><p>目前大二在校,会慢慢写博客来记录自己的学习路程以及当作笔记来回归,如果发现笔记中有<br>错误的小伙伴欢迎来找我指出<a href="https://github.com/kunkun0103">GIthub</a>,感谢大家.</p><h2 id="———初次见面到这里就结束了-希望可以在学习这条路上越走越远-同时希望帮助到更多人-共勉"><a href="#———初次见面到这里就结束了-希望可以在学习这条路上越走越远-同时希望帮助到更多人-共勉" class="headerlink" title="———初次见面到这里就结束了,希望可以在学习这条路上越走越远,同时希望帮助到更多人,共勉!"></a>———初次见面到这里就结束了,希望可以在学习这条路上越走越远,同时希望帮助到更多人,共勉!</h2>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
